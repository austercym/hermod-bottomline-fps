//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.09.14 at 07:01:55 PM CEST 
//


package iso.std.iso._20022.tech.xsd.pacs_008_001;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals2;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy2;
import org.jvnet.jaxb2_commons.lang.HashCode2;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy2;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString2;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy2;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for RemittanceLocation4 complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="RemittanceLocation4"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="RmtId" type="{urn:iso:std:iso:20022:tech:xsd:pacs.008.001.05}Max35Text" minOccurs="0"/&gt;
 *         &lt;element name="RmtLctnDtls" type="{urn:iso:std:iso:20022:tech:xsd:pacs.008.001.05}RemittanceLocationDetails1" maxOccurs="unbounded" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "RemittanceLocation4", propOrder = {
    "rmtId",
    "rmtLctnDtls"
})
public class RemittanceLocation4 implements Serializable, Equals2, HashCode2, ToString2
{

    private final static long serialVersionUID = 1L;
    @XmlElement(name = "RmtId")
    protected String rmtId;
    @XmlElement(name = "RmtLctnDtls")
    protected List<RemittanceLocationDetails1> rmtLctnDtls;

    /**
     * Gets the value of the rmtId property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getRmtId() {
        return rmtId;
    }

    /**
     * Sets the value of the rmtId property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setRmtId(String value) {
        this.rmtId = value;
    }

    /**
     * Gets the value of the rmtLctnDtls property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the rmtLctnDtls property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getRmtLctnDtls().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link RemittanceLocationDetails1 }
     * 
     * 
     */
    public List<RemittanceLocationDetails1> getRmtLctnDtls() {
        if (rmtLctnDtls == null) {
            rmtLctnDtls = new ArrayList<RemittanceLocationDetails1>();
        }
        return this.rmtLctnDtls;
    }

    public String toString() {
        final ToStringStrategy2 strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        {
            String theRmtId;
            theRmtId = this.getRmtId();
            strategy.appendField(locator, this, "rmtId", buffer, theRmtId, (this.rmtId!= null));
        }
        {
            List<RemittanceLocationDetails1> theRmtLctnDtls;
            theRmtLctnDtls = (((this.rmtLctnDtls!= null)&&(!this.rmtLctnDtls.isEmpty()))?this.getRmtLctnDtls():null);
            strategy.appendField(locator, this, "rmtLctnDtls", buffer, theRmtLctnDtls, ((this.rmtLctnDtls!= null)&&(!this.rmtLctnDtls.isEmpty())));
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy2 strategy) {
        if ((object == null)||(this.getClass()!= object.getClass())) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final RemittanceLocation4 that = ((RemittanceLocation4) object);
        {
            String lhsRmtId;
            lhsRmtId = this.getRmtId();
            String rhsRmtId;
            rhsRmtId = that.getRmtId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "rmtId", lhsRmtId), LocatorUtils.property(thatLocator, "rmtId", rhsRmtId), lhsRmtId, rhsRmtId, (this.rmtId!= null), (that.rmtId!= null))) {
                return false;
            }
        }
        {
            List<RemittanceLocationDetails1> lhsRmtLctnDtls;
            lhsRmtLctnDtls = (((this.rmtLctnDtls!= null)&&(!this.rmtLctnDtls.isEmpty()))?this.getRmtLctnDtls():null);
            List<RemittanceLocationDetails1> rhsRmtLctnDtls;
            rhsRmtLctnDtls = (((that.rmtLctnDtls!= null)&&(!that.rmtLctnDtls.isEmpty()))?that.getRmtLctnDtls():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "rmtLctnDtls", lhsRmtLctnDtls), LocatorUtils.property(thatLocator, "rmtLctnDtls", rhsRmtLctnDtls), lhsRmtLctnDtls, rhsRmtLctnDtls, ((this.rmtLctnDtls!= null)&&(!this.rmtLctnDtls.isEmpty())), ((that.rmtLctnDtls!= null)&&(!that.rmtLctnDtls.isEmpty())))) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy2 strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy2 strategy) {
        int currentHashCode = 1;
        {
            String theRmtId;
            theRmtId = this.getRmtId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "rmtId", theRmtId), currentHashCode, theRmtId, (this.rmtId!= null));
        }
        {
            List<RemittanceLocationDetails1> theRmtLctnDtls;
            theRmtLctnDtls = (((this.rmtLctnDtls!= null)&&(!this.rmtLctnDtls.isEmpty()))?this.getRmtLctnDtls():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "rmtLctnDtls", theRmtLctnDtls), currentHashCode, theRmtLctnDtls, ((this.rmtLctnDtls!= null)&&(!this.rmtLctnDtls.isEmpty())));
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy2 strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
